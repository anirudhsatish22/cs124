{"version":3,"sources":["Task.js","To-DoList.js","List.js","Lists.js","loading.gif","loading.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","completed","useState","editContent","setEditContent","task","taskValue","setTaskValue","editTimeout","onTaskCompleted","id","setTimeout","className","type","onChange","displayButtons","checked","class","suppressContentEditableWarning","contentEditable","onBlur","onKeyDown","k","code","onInput","e","currentTarget","textContent","parseInt","target","value","priority","key","ToDoList","setValue","setPriority","showCompleted","setShowCompleted","enterB","newItem","generateUniqueID","created","firebase","database","ServerValue","TIMESTAMP","onNewItemAdded","numCompleted","updatedList","unSortedList","checkedArray","filter","x","length","uncheckedArray","renderList","list","listName","onClick","goBack","filterValue","filterBy","toLowerCase","disabled","placeholder","defaultValue","selected","map","a","selectedId","field","onContentChange","whetherCompleted","swal","title","text","icon","buttons","dangerMode","then","okToDelete","listOfIds","onDeleteItem","List","name","listValue","setListValue","onListChange","onGo","onDelete","Lists","maxLength","displayList","Loading","loadingType","align","src","logo","alt","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","ourCollection","App","setFilter","selectedList","setSelectedList","setListName","query","docRef","collection","doc","orderBy","useCollection","loading","taskList","docs","data","setField","addItem","update","set","get","querySnapshot","d","delete","currentFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7e06c8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nfunction Task(props) {\n    const completed = props.completed;\n    const [editContent, setEditContent] = useState(true);\n    const [taskValue, setTaskValue] = useState(props.task)\n\n    function editTimeout() {\n        setEditContent(false);\n        props.onTaskCompleted(props.id, 'task', taskValue);\n        setTimeout(() => {setEditContent(true)},50)\n    }\n    return (\n    <li key ={props.key}>\n        <span className=\"taskItem\">\n        <label>\n            <input aria-label={completed ? \"Click this Checkbox to mark this task as not completed\" : \"Click this Checkbox to mark this task as completed\"} type=\"checkbox\" onChange={() => {props.onTaskCompleted(props.id, 'completed', !completed); props.displayButtons(!completed)}} checked = {false} class={completed ? \"checked\" : \"unchecked\"}/>\n                    <span aria-label=\"Start typing to edit the name of the corresponding task.\" suppressContentEditableWarning={true} contentEditable={editContent} onBlur={() => editTimeout()} onKeyDown={(k)=> k.code === 'Enter' ? editTimeout() : null} class={completed ? \"checked-text\" : \"unchecked-text\"} onInput={(e) =>  setTaskValue(e.currentTarget.textContent)}>{props.task}</span>\n        </label>\n        </span>\n        <select aria-label=\"Set Task Priority\" className=\"taskPriority\" onChange={(e) => props.onTaskCompleted(props.id, 'priority', parseInt(e.target.value))} value={props.priority}>\n            <option aria-label=\"Set Task Priority to 1\">1</option>\n            <option aria-label=\"Set Task Priority to 2\">2</option>\n            <option aria-label=\"Set Task Priority to 3\">3</option>\n        </select>\n    </li>\n    );\n\n}\n\nexport default Task;","import Task from './Task';\nimport swal from 'sweetalert';\nimport React, {useEffect, useState} from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\n\n\nfunction ToDoList(props) {\n    const [value, setValue] = useState(null);\n    const [priority, setPriority] = useState(1);\n    const [showCompleted, setShowCompleted] = useState(true);\n    const dict = {'task': 'Name', 'priority': 'Priority', 'created':'Date Created', 'Sort By:':'Sort By:'};\n\n    function enterB() {\n        if (value !== null && value !== \"\") {\n            let newItem = {\n                id: generateUniqueID(),\n                task: value,\n                completed: false,\n                priority: priority,\n                created: firebase.database.ServerValue.TIMESTAMP\n            };\n            props.onNewItemAdded(newItem);\n            setValue(\"\")\n        }\n    }\n\n    // created: firebase.fitrestore.FieldValue.serverTimestamp()\n    // firebase.firestore.FieldValue.serverTiem\n    let numCompleted = 0\n    function renderList(unSortedList) {\n        let checkedArray = unSortedList.filter(x => x.completed)\n        numCompleted = checkedArray.length\n        let uncheckedArray = unSortedList.filter(x => !x.completed)\n        return [...uncheckedArray, ...checkedArray]\n    }\n\n    function onDelete(){\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover completed tasks!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    let listOfIds = updatedList.filter(a => a.completed === true).map(a => a.id);\n                    props.onDeleteItem(listOfIds);\n                    numCompleted = 0\n\n                } else {\n                    return;\n                }\n            });\n    }\n\n\n\n    let updatedList = renderList(props.list)\n\n\n    return (\n        <>\n\n\n            <span className='headerClass' id=\"header-one\">\n            <h1 className=\"top-title\">{props.listName}</h1>\n            </span>\n            <span className='headerClass' id=\"header-two\">\n                <span id='sort-items'>\n                <button aria-label=\"Go back to the List of all Lists\" id=\"back-button\" className=\"show-buttons\" onClick={props.goBack}>←</button>\n                    {/*defaultValue='Date Created' value={dict[props.filterValue]}*/}\n                    <select aria-label=\"Click this button to sort list items by a certain criterion\"  id=\"sort-button\" value={dict[props.filterValue]} class={updatedList.length != 0  ? \"show-buttons\" : \"grey-buttons\"} onChange={(e) => {\n                    props.filterBy(e.target.value.toLowerCase())\n                }}>\n                    <option  disabled>Sort By:</option>\n                    <option aria-label=\"Sort By Creation Date\">Date Created</option>\n                    <option aria-label=\"Sort By Task Priority\">Priority</option>\n                    <option aria-label=\"Sort Lexicographically by Task Name\">Name</option>\n                </select>\n                </span>\n            </span>\n\n            <div id=\"container\">\n\n                <div id='enter-item-container' className=\"enter-item\">\n                    <input aria-label=\"Enter the name of your new Task\" type=\"text\" value={value} id=\"input-text\" onKeyDown={(e) => e.code === \"Enter\" ? enterB() : null} onChange={ (e) => setValue(e.target.value)} placeholder=\"Add a task...\"/>\n                    {/*<span className=\"enter-span\">*/}\n                    {/*<span id=\"priority-container\">*/}\n                    <select aria-label=\"Set Task Priority\" id=\"priority-button\" onChange={(e)=> setPriority(parseInt(e.target.value))} defaultValue='Priority:' class={ value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"}>\n                            <option selected disabled>Priority:</option>\n                            <option aria-label=\"Set Task Priority to 1\">1</option>\n                            <option aria-label=\"Set Task Priority to 2\">2</option>\n                            <option aria-label=\"Set Task Priority to 3\">3</option>\n                    </select>\n                    {/*</span>*/}\n                    {/*    <span className='enter-button-container'>*/}\n                    <button aria-label=\"Click this button to add your task to the list.\" className={value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"} onClick={enterB} id=\"enter-button\">+</button>\n                        {/*</span>*/}\n                    {/*</span>*/}\n                </div>\n\n                <div class=\"ListItems\">\n                    <ul id=\"list\">\n                        {showCompleted ? updatedList.map(a => <Task\n                            onTaskCompleted={ (selectedId, field, value) =>\n                            props.onContentChange(selectedId, field, value) ?  numCompleted--  : null\n                            }\n                            key = {a.id}\n                            displayButtons ={(whetherCompleted)=> {whetherCompleted ? numCompleted++ : numCompleted--}}\n                            {...a}\n                        />) : updatedList.filter(a => a.completed === false).map(a => <Task\n                            onTaskCompleted={ (selectedId, field, value) =>\n                            props.onContentChange(selectedId, field, value) ?  numCompleted-- : null\n                            }\n                            key = {a.id}\n                            displayButtons ={(whetherCompleted)=> whetherCompleted ? numCompleted++ : numCompleted--}\n                            {...a}\n                        />)}\n                    </ul>\n                </div>\n                <button aria-label={showCompleted ? \"Click this button to hide completed tasks\" : \"Click this button to show completed tasks\"} class={numCompleted > 0 ? \"show-buttons\" : \"grey-buttons\"} id=\"hide-completed-button\" onClick={() => setShowCompleted(!showCompleted)}>{showCompleted ? \"Hide Completed\" : \"Show Completed\"}</button>\n                <button aria-label=\"Click this button to Delete Completed Tasks\" class={numCompleted > 0 && showCompleted ? \"show-buttons\" : \"grey-buttons\"} id=\"delete-button\" onClick={onDelete}>Delete Completed</button>\n            </div>\n        </>\n);\n}\n\n\nexport default ToDoList;\n\n","import React, {useState} from 'react';\nfunction List(props) {\n    const [editContent, setEditContent] = useState(true);\n    const [listValue, setListValue] = useState(props.name)\n\n    function editTimeout() {\n        setEditContent(false);\n        props.onListChange(props.id, 'name', listValue);\n        setTimeout(() => {setEditContent(true)},50)\n    }\n    return (\n        <li className=\"listItem\" key={props.id}>\n        <span className=\"taskItem\">\n            <label aria-label=\"Start typing to edit the name of the corresponding List.\" suppressContentEditableWarning={true} contentEditable={editContent} onBlur={()=>editTimeout()} onKeyDown={(k)=> k.code === 'Enter' ? editTimeout() : null} onInput={(e) => setListValue(e.currentTarget.textContent)}>{props.name}</label>\n        </span>\n            <button aria-label=\"Click this button to see the corresponding List.\" className=\"show-buttons\" id=\"go-button\" onClick={() => props.onGo(props.id, props.name)}>Go</button>\n            <button aria-label=\"Click this button to delete the corresponding List.\" className=\"show-buttons\" id=\"delete-list-button\" onClick={() =>props.onDelete(props.id)}>🗑</button>\n        </li>\n    );\n}\n\n{/*<label onChange={() => {props.onTaskCompleted(props.id, 'completed', !completed); props.displayButtons(!completed)}} checked = {false} class={completed ? \"checked\" : \"unchecked\"}/>*/}\nexport default List;\n","\nimport App from './App';\nimport './App.css';\nimport ToDoList from \"./To-DoList\";\nimport List from './List';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport React, {useState} from 'react';\nimport swal from 'sweetalert';\n\n\n\nfunction Lists(props) {\n\n    const [value, setValue] = useState('');\n\n    function enterB() {\n        if (value !== null && value !== \"\") {\n            let newItem = {\n                id: generateUniqueID(),\n                name: value\n                // created: firebase.database.ServerValue.TIMESTAMP\n            };\n            props.onNewItemAdded(newItem);\n            setValue(\"\")\n        }\n    }\n\n\n    function onDelete(id){\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this List!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    props.onDeleteItem([id]);\n                } else {\n                    return;\n                }\n            });\n    }\n\n\n    function deleteAllLists() {\n        swal({\n            title: \"Delete All Lists?\",\n            text: \"Once deleted, you will not be able to recover these Lists!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    props.list.map(list => props.onDeleteItem([list.id]));\n                } else {\n                    return;\n                }\n            });\n\n    }\n\n    return (\n        <>\n            <h1 className=\"top-title\">Lists</h1>\n            <div id=\"list-container\">\n                <div className=\"enter-item\" id=\"list-enter-item\">\n                    <input aria-label=\"Enter the name of your new List\" type=\"text\" maxLength=\"28\" id=\"list-input-text\" value={value} onKeyDown={(e) => e.code === \"Enter\" ? enterB() : null} onChange={ (e) => setValue(e.target.value)} placeholder=\"Create a list...\"/>\n                    <button aria-label=\"Click this button to add your new List to the List of Lists.\" className={value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"}  onClick={enterB} id=\"list-enter-button\">+</button>\n                    <button aria-label=\"Click this button to delete all the Lists that you have.\" className={props.list.length > 0 ? \"show-buttons\" : \"grey-buttons\"} id=\"delete-all-lists\" onClick={deleteAllLists}>🗑</button>\n\n\n                    {/*<span className=\"enter-span\">*/}\n                    {/*    <span className='enter-button-container'>*/}\n                    {/*        <button className={value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"}  onClick={enterB} id=\"enter-button\">+</button>*/}\n                    {/*    </span>*/}\n                    {/*    <span className=\"delete-button-container\">*/}\n                    {/*        <button className={props.list ? \"show-buttons\" : \"grey-buttons\"} id=\"delete-all-lists\" onClick={deleteAllLists}>🗑</button>*/}\n                    {/*    </span>*/}\n                    {/*</span>*/}\n                </div>\n                <div class=\"ListItems\" id=\"List-of-list-items\">\n                    <ul id=\"list\">{\n                        props.list.map(a => <List onGo={props.displayList} onListChange={props.onContentChange} onDelete={onDelete}{...a}/>)\n                    }\n                    </ul>\n               </div>\n            </div>\n        </>\n\n    )\n}\n\n// onTaskCompleted={ (selectedId, field, value) =>\n//     props.onContentChange(selectedId, field, value) ?  numCompleted--  : null\n// }\n// displayButtons ={(whetherCompleted)=> {whetherCompleted ? numCompleted++ : numCompleted--}}\n\nexport default Lists;\n\n\n\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/loading.a1a99674.gif\";","import React from 'react';\nimport logo from './loading.gif'\n\n\n\nfunction Loading(props) {\n    if (props.loadingType === '') {\n\n    return (\n        <>\n        <div id=\"root\"><h1 className=\"top-title\">Lists</h1>\n            <div id=\"list-container\">\n                <div className=\"enter-item\" id=\"list-enter-item\"><input type=\"text\" maxLength=\"28\" id=\"list-input-text\" placeholder=\"Create a list...\" value=\"\"/>\n                    <button className=\"grey-buttons\" id=\"list-enter-button\">+</button>\n                    <button className=\"grey-buttons\" id=\"delete-all-lists\">🗑</button>\n                </div>\n                <div className=\"ListItems\" id=\"List-of-list-items\">\n                    <h2 align=\"center\">Loading....</h2>\n                    <h3 align=\"center\"><img align=\"center\" src={logo} alt=\"Loading\"/></h3>\n                </div>\n            </div>\n        </div>\n        </>\n        )\n        }\n    else {\n       return <>\n           <div id=\"root\"><span className=\"headerClass\" id=\"header-one\"><h1 className=\"top-title\">{props.listName}</h1></span><span\n               className=\"headerClass\" id=\"header-two\"><span id=\"sort-items\"><button id=\"back-button\"\n                                                                                     className=\"show-buttons\">←</button><select\n               id=\"sort-button\" className=\"grey-buttons\"><option disabled=\"\" selected=\"\">Sort By:</option><option>Priority</option><option>Name</option><option>Date Created</option></select></span></span>\n               <div id=\"container\">\n                   <div id=\"enter-item-container\" className=\"enter-item\"><input type=\"text\" id=\"input-text\"\n                                                                                placeholder=\"Add a task...\"\n                                                                                value=\"\"/><select id=\"priority-button\"\n                                                                                                 className=\"grey-buttons\">\n                       <option disabled=\"\" selected=\"\">Priority:</option>\n                       <option>1</option>\n                       <option>2</option>\n                       <option>3</option>\n                   </select>\n                       <button className=\"grey-buttons\" id=\"enter-button\">+</button></div>\n                   <div className=\"ListItems\">\n                       <h2 align=\"center\">Loading....</h2>\n                       <h3 align=\"center\"><img align=\"center\" src={logo} alt=\"Loading\"/></h3>\n                   </div>\n                   <button className=\"grey-buttons\" id=\"hide-completed-button\">Hide Completed</button>\n                   <button className=\"grey-buttons\" id=\"delete-button\">Delete Completed</button>\n               </div>\n           </div>\n       </>\n    }\n    }\n\n//     return (\n//     <>\n//         <span className=\"headerClass\">\n//         <h1 className=\"top-title\">{props.listName}</h1>\n//         </span>\n//         <span className='headerClass' id=\"header-two\">\n//                 <span id='sort-items'>\n//                 <button id=\"back-button\" className=\"show-buttons\">←</button>\n//                 <select id=\"sort-button\" className=\"show-buttons\">\n//                     <option selected disabled>Sort By:</option>\n//                     <option>Priority</option>\n//                     <option>Name</option>\n//                     <option>Date Created</option>\n//                 </select>\n//                 </span>\n//         </span>\n//         <div id=\"container\">\n//             <div className=\"enter-item\">\n//                 <input type=\"text\" id=\"input-text\" placeholder=\"Add a task...\" value=\"\"/>\n//                 <span id=\"enter-span\">\n//                     <span id=\"priority-container\">\n//                         <select id=\"priority-button\" className=\"grey-buttons\">\n//                             <option disabled=\"\" selected=\"\">Priority:</option>\n//                             <option>1</option><option>2</option><option>3</option>\n//                         </select>\n//                     </span><\n//                     span id=\"enter-button-container\">\n//                     <button className=\"grey-buttons\" id=\"enter-button\">+</button>\n//                 </span>\n//                 </span>\n//             </div>\n//             <div className=\"ListItems\">\n//                 <ul id=\"list\">\n//                     <h2 align=\"center\">Loading...</h2>\n//                     <h3 align=\"center\"><img align=\"center\" src={logo} alt=\"Loading\"/></h3>\n//                 </ul>\n//             </div>\n//             <button className=\"grey-buttons\" id=\"hide-completed-button\">Hide Completed</button>\n//             <button className=\"grey-buttons\" id=\"delete-button\">Delete Completed</button>\n//         </div>\n//\n//\n//     </>)\n// }\n//\n\nexport default Loading;\n\n","import './App.css';\nimport ToDoList from \"./To-DoList\";\nimport React, {useState} from 'react';\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport Lists from \"./Lists\";\nimport Loading from \"./loading\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMsDbORWI7OtcnI4VjQnY6xEE6XGjZPf0\",\n  authDomain: \"to-do-list-78c30.firebaseapp.com\",\n  projectId: \"to-do-list-78c30\",\n  storageBucket: \"to-do-list-78c30.appspot.com\",\n  messagingSenderId: \"466185835646\",\n  appId: \"1:466185835646:web:dbe8a4413a6cad9f3f742f\",\n  measurementId: \"G-3Q5LDPJYK6\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst ourCollection = \"Lists\";\n\nfunction App(props) {\n    const [filter, setFilter] = useState('Sort By:');\n    const [selectedList, setSelectedList] = useState('');\n    const [listName, setListName] = useState('');\n    let query = ''\n    let docRef = db.collection(ourCollection)\n    if (selectedList === '') {\n        query = db.collection(ourCollection)\n        docRef = query\n    }\n    else {\n        if (filter === 'Sort By:') {\n            query = db.collection(ourCollection).doc(selectedList).collection('Tasks');\n            docRef = query\n        } else {\n            query = db.collection(ourCollection).doc(selectedList).collection('Tasks').orderBy(filter);\n            docRef = db.collection(ourCollection).doc(selectedList).collection('Tasks')\n        }\n    }\n    const [value, loading, error] = useCollection(query);\n\n\n    if (loading) {\n\n   return (\n        <Loading loadingType={selectedList} listName={listName}></Loading>\n        );}\n\n\n    let taskList = value != null? value.docs.map((doc) => doc.data()) : []\n\n    if (selectedList === '') {\n        return (\n            <Lists list={taskList} displayList={(id,name)=>{setSelectedList(id); setListName(name)}} onContentChange={setField} onNewItemAdded={addItem} onDeleteItem={onDelete}/>\n        )\n    }\n    function setField(id, field, value) {\n        if (selectedList === '') {\n            if (field === 'name' && (value == \"\" || value == null)) {\n                onDelete([id]);\n            } else {\n                const doc = docRef.doc(id);\n                doc.update({[field]: value});\n            }\n        }\n        else {\n            if (field === 'task' && (value == \"\" || value == null)) {\n                onDelete([id]);\n            } else {\n                const doc = docRef.doc(id);\n                doc.update({[field]: value});\n                setFilter(filter)\n            }\n        }\n    }\n    function addItem(newItem) {\n        // const docRef = db.collection(ourCollection).doc(newItem.id);\n        docRef.doc(newItem.id).set(newItem);\n    }\n    function onDelete(listOfIds) {\n        if (selectedList === \"\") {\n            // docRef.doc(listOfIds[0]).collection(\"Tasks\").delete();\n            docRef.doc(listOfIds[0]).collection(\"Tasks\").get().then(querySnapshot =>\n                querySnapshot.docs.map(d => docRef.doc(listOfIds[0]).collection('Tasks').doc(d.id).delete())\n            );\n            docRef.doc(listOfIds[0]).delete();\n\n        }\n        else {\n            listOfIds.map(id => docRef.doc(id).delete());\n        }\n    }\n    function getFilteredList(currentFilter) {\n        if (currentFilter === \"name\") {\n            currentFilter = \"task\"\n        }\n        if (currentFilter === \"date created\") {\n            currentFilter = \"created\"\n        }\n        setFilter(currentFilter)\n        }\n\n  return (\n      <ToDoList listName={listName} list={taskList} goBack={()=>setSelectedList('')} onContentChange={setField} onNewItemAdded={addItem} onDeleteItem={onDelete} filterBy={getFilteredList} filterValue={filter}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Lists from './Lists'\n\nReactDOM.render(\n  <React.StrictMode>\n       <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}