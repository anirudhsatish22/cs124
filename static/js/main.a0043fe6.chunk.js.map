{"version":3,"sources":["Task.js","To-DoList.js","test.js","List.js","Lists.js","loading.gif","loading.js","SignUp.js","SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","completed","useState","editContent","setEditContent","task","taskValue","setTaskValue","editTimeout","onTaskCompleted","id","setTimeout","className","type","onChange","displayButtons","checked","class","suppressContentEditableWarning","contentEditable","onBlur","onKeyDown","k","code","onInput","e","currentTarget","textContent","parseInt","target","value","priority","key","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","ToDoList","setValue","setPriority","showCompleted","setShowCompleted","showPop","setShowPop","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleClickOutside","event","current","contains","useEffect","document","addEventListener","removeEventListener","useComponentVisible","getSharedQuery","collection","doc","listId","useCollection","toggleModal","console","log","listSharedWith","sharedWith","sharingList","map","email","error","Alert","listToShare","setListToShare","defaultValue","isMulti","blurInputOnSelect","options","emailList","onClick","onClose","onDone","enterB","newItem","generateUniqueID","created","database","ServerValue","TIMESTAMP","onNewItemAdded","numCompleted","updatedList","unSortedList","checkedArray","filter","x","length","uncheckedArray","renderList","list","usersList","listName","shareWith","item","goBack","filterValue","filterBy","toLowerCase","disabled","logOut","placeholder","selected","a","selectedId","field","onContentChange","whetherCompleted","swal","title","text","icon","buttons","dangerMode","then","okToDelete","listOfIds","onDeleteItem","List","name","listValue","setListValue","onListChange","onGo","onDelete","Lists","ownerEmail","userEmail","maxLength","taskList","displayList","sharedList","Loading","loadingType","align","src","logo","alt","eye","faEye","SignUp","useCreateUserWithEmailAndPassword","auth","createUserWithEmailAndPassword","userCredential","loading","setEmail","password","setPassword","showError","setShowError","passwordShown","setPasswordShown","confirmPassword","setConfirmPassword","confirmPasswordShown","setConfirmPasswordShown","message","showConfirmButton","required","SignIn","useSignInWithEmailAndPassword","signInWithEmailAndPassword","style","background","color","signInWithPopup","facebookProvider","result","user","credential","credentialFromResult","accessToken","catch","ourCollection","userCollection","googleProvider","GoogleAuthProvider","FacebookAuthProvider","SignedInApp","setFilter","selectedList","setSelectedList","setListName","query","sharedQuery","where","docRef","handleLogOut","signOut","uid","set","orderBy","sharedValue","usersQuery","users","getSharedValue","getSharedLoading","getSharedError","docs","data","setField","addItem","update","get","querySnapshot","d","delete","currentFilter","App","useAuthState","showSignUp","setShowSignUp","toggleSignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPA6BeA,MA5Bf,SAAcC,GACV,IAAMC,EAAYD,EAAMC,UACxB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAASF,EAAMK,MAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,SAASC,IACLJ,GAAe,GACfJ,EAAMS,gBAAgBT,EAAMU,GAAI,OAAQJ,GACxCK,YAAW,WAAOP,GAAe,KAAO,IAE5C,OACA,+BACI,sBAAMQ,UAAU,WAAhB,SACA,kCACI,uBAAO,aAAYX,EAAY,yDAA2D,qDAAsDY,KAAK,WAAWC,SAAU,WAAOd,EAAMS,gBAAgBT,EAAMU,GAAI,aAAcT,GAAYD,EAAMe,gBAAgBd,IAAae,SAAW,EAAOC,MAAOhB,EAAY,UAAY,cACvT,sBAAM,aAAW,2DAA2DiB,gCAAgC,EAAMC,gBAAiBhB,EAAaiB,OAAQ,kBAAMZ,KAAea,UAAW,SAACC,GAAD,MAAiB,UAAXA,EAAEC,KAAmBf,IAAgB,MAAMS,MAAOhB,EAAY,eAAiB,iBAAkBuB,QAAS,SAACC,GAAD,OAAQlB,EAAakB,EAAEC,cAAcC,cAA7U,SAA4V3B,EAAMK,YAG9W,yBAAQ,aAAW,oBAAoBO,UAAU,eAAeE,SAAU,SAACW,GAAD,OAAOzB,EAAMS,gBAAgBT,EAAMU,GAAI,WAAYkB,SAASH,EAAEI,OAAOC,SAASA,MAAO9B,EAAM+B,SAArK,UACI,wBAAQ,aAAW,yBAAnB,eACA,wBAAQ,aAAW,yBAAnB,eACA,wBAAQ,aAAW,yBAAnB,oBAVE/B,EAAMgC,M,iDCOpBC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMC,EAAKT,IAASU,YAuMLC,MApMf,SAAkB5C,GACd,MAA0BE,mBAAS,MAAnC,mBAAO4B,EAAP,KAAce,EAAd,KACA,EAAgC3C,mBAAS,GAAzC,mBAAO6B,EAAP,KAAiBe,EAAjB,KACA,EAA0C5C,oBAAS,GAAnD,mBAAO6C,EAAP,KAAsBC,EAAtB,KACA,EAA8B9C,oBAAS,GAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EC1BW,SAA6BC,GACxC,MAAoDjD,mBAASiD,GAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACMC,EAAMC,iBAAO,MAEbC,EAAqB,SAACC,GACpBH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAM5B,SAC3CwB,GAAsB,IAW9B,OAPAO,qBAAU,WAEN,OADAC,SAASC,iBAAiB,QAASN,GAAoB,GAChD,WACHK,SAASE,oBAAoB,QAASP,GAAoB,OAI3D,CAAEF,MAAKF,qBAAoBC,yBDSEW,EAAoB,GAQlDC,GARN,EAAQX,IAAR,EAAaF,mBAQUV,EAAGwB,WAfR,SAekCC,IAAInE,EAAMoE,SAC9D,EAA2DC,YAAcJ,GAAzE,mBAEA,SAASK,IACLpB,GAAYD,GAHhB,eAYAsB,QAAQC,IAAI,iBAAkBxE,EAAMyE,eAAeC,YACnD,IAAIC,EAAc,GAClB,IACIA,EAAc3E,EAAMyE,eAAeC,WAAWE,KAAI,SAACC,GAC/C,MAAO,CAAC,MAAQA,EAAO,MAAQA,MAGvC,MAAOC,IAOP,SAASC,EAAM/E,GACX,MAAsCE,mBAASyE,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,OACA,qBAAKrE,UAAW,WAAhB,SACG,sBAAKA,UAAU,QAAf,UACI,yEACA,cAAC,IAAD,CAAQK,MAAM,gBAAgBP,GAAG,iBAAiBwE,aAAcF,EAAaG,SAAO,EAACC,mBAAmB,EAAOC,QAASC,EAAWxE,SAAU,SAAAW,GAAC,OAAIwD,EAAexD,MAChK,sBAAKb,UAAU,gBAAf,UACI,wBAAQA,UAAU,8BAA8BC,KAAM,SAC9C0E,QAASvF,EAAMwF,QADvB,oBAKA,wBAAQD,QAAS,kBAAMvF,EAAMyF,OAAOT,IAAcpE,UAAU,8BAA8BF,GAAG,cAA7F,0BAShB,SAASgF,IACL,GAAc,OAAV5D,GAA4B,KAAVA,EAAc,CAChC,IAAI6D,EAAU,CACVjF,GAAIkF,cACJvF,KAAMyB,EACN7B,WAAW,EACX8B,SAAUA,EACV8D,QAAS5D,IAAS6D,SAASC,YAAYC,WAE3ChG,EAAMiG,eAAeN,GACrB9C,EAAS,KAjCjB0B,QAAQC,IAAI,iBAAkBG,GAyC9B,IAAIuB,EAAe,EA8BfC,EA7BJ,SAAoBC,GAChB,IAAIC,EAAeD,EAAaE,QAAO,SAAAC,GAAC,OAAIA,EAAEtG,aAC9CiG,EAAeG,EAAaG,OAC5B,IAAIC,EAAiBL,EAAaE,QAAO,SAAAC,GAAC,OAAKA,EAAEtG,aACjD,MAAM,GAAN,mBAAWwG,GAAX,YAA8BJ,IAyBhBK,CAAW1G,EAAM2G,MACnCpC,QAAQC,IAAI,2BAA4B2B,GACxC,IAAIb,EAAYtF,EAAM4G,UAAUhC,KAAI,SAACC,GACjC,MAAO,CAAC,MAAQA,EAAO,MAAQA,MAGnC,OADAN,QAAQC,IAAI,aAAcc,GAEtB,qCACI,uBAAM1E,UAAU,cAAcF,GAAG,aAAjC,UACA,oBAAIE,UAAU,YAAd,SAA2BZ,EAAM6G,WAC5B5D,GACG,cAAC8B,EAAD,CAAOS,QAASlB,EAAamB,OArG7C,SAAkBT,GACdT,QAAQC,IAAI,gBAAiBQ,GAC7BhF,EAAM8G,UAAU9B,EAAYJ,KAAI,SAAAmC,GAAI,OAAIA,EAAKjF,SAAQ9B,EAAMoE,QAC3DE,UAsGI,sBAAM1D,UAAU,cAAcF,GAAG,aAAjC,SACI,uBAAMA,GAAG,aAAT,UACI,wBAAQ,aAAW,mCAAmCA,GAAG,cAAcE,UAAU,eAAe2E,QAASvF,EAAMgH,OAA/G,oBAEI,yBAAQ,aAAW,8DAA+DtG,GAAG,cAAcoB,MA3H1G,CAAC,KAAQ,OAAQ,SAAY,WAAY,QAAU,eAAgB,WAAW,YA2HwC9B,EAAMiH,aAAchG,MAA6B,GAAtBkF,EAAYK,OAAe,eAAiB,eAAgB1F,SAAU,SAACW,GACjNzB,EAAMkH,SAASzF,EAAEI,OAAOC,MAAMqF,gBAD9B,UAGA,wBAASC,UAAQ,EAAjB,sBACA,wBAAQ,aAAW,wBAAnB,0BACA,wBAAQ,aAAW,wBAAnB,sBACA,wBAAQ,aAAW,sCAAnB,qBAEJ,wBAAQ1G,GAAG,eAAeE,UAAU,eAAe2E,QAASjB,EAA5D,wBACA,wBAASiB,QAASvF,EAAMqH,OAAQzG,UAAU,+BAA1C,0BASR,sBAAKF,GAAG,YAAR,UAEI,sBAAKA,GAAG,uBAAuBE,UAAU,aAAzC,UACI,uBAAO,aAAW,kCAAkCC,KAAK,OAAOiB,MAAOA,EAAOpB,GAAG,aAAaW,UAAW,SAACI,GAAD,MAAkB,UAAXA,EAAEF,KAAmBmE,IAAW,MAAM5E,SAAW,SAACW,GAAD,OAAOoB,EAASpB,EAAEI,OAAOC,QAAQwF,YAAY,kBAC9M,yBAAQ,aAAW,oBAAoB5G,GAAG,kBAAkBI,SAAU,SAACW,GAAD,OAAMqB,EAAYlB,SAASH,EAAEI,OAAOC,SAASoD,aAAa,YAAYjE,MAAkB,KAAVa,GAA0B,OAAVA,EAAiB,eAAiB,eAAtM,UACQ,wBAAQyF,UAAQ,EAACH,UAAQ,EAAzB,uBACA,wBAAQ,aAAW,yBAAnB,eACA,wBAAQ,aAAW,yBAAnB,eACA,wBAAQ,aAAW,yBAAnB,kBAER,wBAAQ,aAAW,kDAAkDxG,UAAqB,KAAVkB,GAA0B,OAAVA,EAAiB,eAAiB,eAAgByD,QAASG,EAAQhF,GAAG,eAAtK,kBAUJ,sBAAKO,MAAM,YAAX,UACKsD,QAAQC,IAAIxE,EAAM4G,WAEnB,oBAAIlG,GAAG,OAAP,SACKqC,EAAgBoD,EAAYvB,KAAI,SAAA4C,GAAC,OAAI,cAAC,EAAD,aAClC/G,gBAAkB,SAACgH,EAAYC,EAAO5F,GAApB,OAClB9B,EAAM2H,gBAAgBF,EAAYC,EAAO5F,GAAUoE,IAAkB,MAGrEnF,eAAiB,SAAC6G,GAAqBA,EAAmB1B,IAAiBA,MACvEsB,GAFGA,EAAE9G,OAGPyF,EAAYG,QAAO,SAAAkB,GAAC,OAAoB,IAAhBA,EAAEvH,aAAqB2E,KAAI,SAAA4C,GAAC,OAAI,cAAC,EAAD,aAC1D/G,gBAAkB,SAACgH,EAAYC,EAAO5F,GAApB,OAClB9B,EAAM2H,gBAAgBF,EAAYC,EAAO5F,GAAUoE,IAAiB,MAGpEnF,eAAiB,SAAC6G,GAAD,OAAqBA,EAAmB1B,IAAiBA,MACtEsB,GAFGA,EAAE9G,YAMrB,wBAAQ,aAAYqC,EAAgB,4CAA8C,4CAA6C9B,MAAOiF,EAAe,EAAI,eAAiB,eAAgBxF,GAAG,wBAAwB6E,QAAS,kBAAMvC,GAAkBD,IAAtP,SAAuQA,EAAgB,iBAAmB,mBAC1S,wBAAQ,aAAW,8CAA8C9B,MAAOiF,EAAe,GAAKnD,EAAgB,eAAiB,eAAgBrC,GAAG,gBAAgB6E,QArG5K,WACIsC,IAAK,CACDC,MAAO,gBACPC,KAAM,iEACNC,KAAM,UACNC,QAAS,CAAC,KAAM,OAChBC,YAAY,IAEXC,MAAK,SAACC,GACH,GAAIA,EAAJ,CACI,IAAIC,EAAYlC,EAAYG,QAAO,SAAAkB,GAAC,OAAoB,IAAhBA,EAAEvH,aAAoB2E,KAAI,SAAA4C,GAAC,OAAIA,EAAE9G,MACzEV,EAAMsI,aAAaD,GACnBnC,EAAe,OAyFnB,qCE/LDqC,MApBf,SAAcvI,GACV,MAAsCE,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAASF,EAAMwI,MAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,SAASlI,IACLJ,GAAe,GACfJ,EAAM2I,aAAa3I,EAAMU,GAAI,OAAQ+H,GACrC9H,YAAW,WAAOP,GAAe,KAAO,IAE5C,OACI,qBAAIQ,UAAU,WAAd,UACA,sBAAMA,UAAU,WAAhB,SACI,uBAAO,aAAW,2DAA2DM,gCAAgC,EAAMC,gBAAiBhB,EAAaiB,OAAQ,kBAAIZ,KAAea,UAAW,SAACC,GAAD,MAAiB,UAAXA,EAAEC,KAAmBf,IAAgB,MAAMgB,QAAS,SAACC,GAAD,OAAOiH,EAAajH,EAAEC,cAAcC,cAArR,SAAoS3B,EAAMwI,SAE1S,wBAAQ,aAAW,mDAAmD5H,UAAU,eAAeF,GAAG,YAAY6E,QAAS,kBAAMvF,EAAM4I,KAAK5I,EAAMU,GAAIV,EAAMwI,OAAxJ,gBACA,wBAAQ,aAAW,sDAAsD5H,UAAU,eAAeF,GAAG,qBAAqB6E,QAAS,kBAAKvF,EAAM6I,SAAS7I,EAAMU,KAA7J,4BAL0BV,EAAMU,KCsG7BoI,MAtGf,SAAe9I,GAEX,MAA0BE,mBAAS,IAAnC,mBAAO4B,EAAP,KAAce,EAAd,KAEA,SAAS6C,IACL,GAAc,OAAV5D,GAA4B,KAAVA,EAAc,CAChC,IAAI6D,EAAU,CACVjF,GAAIkF,cACJ4C,KAAM1G,EACNiH,WAAY/I,EAAMgJ,UAClBtE,WAAY,IAEhB1E,EAAMiG,eAAeN,GACrB9C,EAAS,KAKjB,SAASgG,EAASnI,GACdmH,IAAK,CACDC,MAAO,gBACPC,KAAM,2DACNC,KAAM,UACNC,QAAS,CAAC,KAAM,OAChBC,YAAY,IAEXC,MAAK,SAACC,GACCA,GACApI,EAAMsI,aAAa,CAAC5H,OA0BpC,OACI,qCACI,sBAAKA,GAAG,uBAAR,UACA,uBAAOA,GAAG,aAAaE,UAAU,YAAjC,mBACA,wBAAQF,GAAG,eAAeE,UAAU,+BAA+B2E,QAASvF,EAAMqH,OAAlF,wBAEA,sBAAK3G,GAAG,iBAAR,UACI,sBAAKE,UAAU,aAAaF,GAAG,kBAA/B,UACI,uBAAO,aAAW,kCAAkCG,KAAK,OAAOoI,UAAU,KAAKvI,GAAG,kBAAkBoB,MAAOA,EAAOT,UAAW,SAACI,GAAD,MAAkB,UAAXA,EAAEF,KAAmBmE,IAAW,MAAM5E,SAAW,SAACW,GAAD,OAAOoB,EAASpB,EAAEI,OAAOC,QAAQwF,YAAY,qBAClO,wBAAQ,aAAW,+DAA+D1G,UAAqB,KAAVkB,GAA0B,OAAVA,EAAiB,eAAiB,eAAiByD,QAASG,EAAQhF,GAAG,oBAApL,eACA,wBAAQ,aAAW,2DAA2DE,UAAWZ,EAAMkJ,SAAS1C,OAAS,EAAI,eAAiB,eAAgB9F,GAAG,mBAAmB6E,QA5B5L,WACIsC,IAAK,CACDC,MAAO,oBACPC,KAAM,6DACNC,KAAM,UACNC,QAAS,CAAC,KAAM,OAChBC,YAAY,IAEXC,MAAK,SAACC,GACCA,GACApI,EAAMkJ,SAAStE,KAAI,SAAA+B,GAAI,OAAI3G,EAAMsI,aAAa,CAAC3B,EAAKjG,YAkBpD,6BAIJ,sBAAKO,MAAM,YAAYP,GAAG,qBAA1B,UAEQV,EAAMkJ,SAAS1C,OAAS,EACxB,qCACA,4CACA,oBAAI9F,GAAG,OAAP,SACAV,EAAMkJ,SAAStE,KAAI,SAAA4C,GAAC,OAAI,cAAC,EAAD,aAAMoB,KAAM5I,EAAMmJ,YAAaR,aAAc3I,EAAM2H,gBAAiBkB,SAAUA,GAAarB,YAKnH,KAIAxH,EAAMoJ,WAAW5C,OAAS,EACtB,qCACI,8CACA,oBAAI9F,GAAG,OAAP,SACIV,EAAMoJ,WAAWxE,KAAI,SAAA4C,GAAC,OAAI,cAAC,EAAD,aAAMoB,KAAM5I,EAAMmJ,YAAaR,aAAc3I,EAAM2H,gBAAiBkB,SAAUA,GAAarB,YAK7H,eCvGb,MAA0B,oCCsD1B6B,MAjDf,SAAiBrJ,GACb,MAA0B,KAAtBA,EAAMsJ,YAGN,mCACA,sBAAK5I,GAAG,OAAR,UAAe,oBAAIE,UAAU,YAAd,mBACX,sBAAKF,GAAG,iBAAR,UACI,sBAAKE,UAAU,aAAaF,GAAG,kBAA/B,UAAiD,uBAAOG,KAAK,OAAOoI,UAAU,KAAKvI,GAAG,kBAAkB4G,YAAY,mBAAmBxF,MAAM,KACzI,wBAAQlB,UAAU,eAAeF,GAAG,oBAApC,eACA,wBAAQE,UAAU,eAAeF,GAAG,mBAApC,6BAEJ,sBAAKE,UAAU,YAAYF,GAAG,qBAA9B,UACI,oBAAI6I,MAAM,SAAV,yBACA,oBAAIA,MAAM,SAAV,SAAmB,qBAAKA,MAAM,SAASC,IAAKC,EAAMC,IAAI,yBAQ5D,mCACH,sBAAKhJ,GAAG,OAAR,UAAe,sBAAME,UAAU,cAAcF,GAAG,aAAjC,SAA8C,oBAAIE,UAAU,YAAd,SAA2BZ,EAAM6G,aAAqB,sBAC/GjG,UAAU,cAAcF,GAAG,aADoF,SACvE,uBAAMA,GAAG,aAAT,UAAsB,wBAAQA,GAAG,cACHE,UAAU,eADlB,oBAC2C,yBACzGF,GAAG,cAAcE,UAAU,eAD8E,UAC/D,wBAAQwG,SAAS,GAAGG,SAAS,GAA7B,sBAAiD,8CAAyB,0CAAqB,0DACzI,sBAAK7G,GAAG,YAAR,UACI,sBAAKA,GAAG,uBAAuBE,UAAU,aAAzC,UAAsD,uBAAOC,KAAK,OAAOH,GAAG,aACf4G,YAAY,gBACZxF,MAAM,KAAI,yBAAQpB,GAAG,kBACJE,UAAU,eADjB,UAEnE,wBAAQwG,SAAS,GAAGG,SAAS,GAA7B,uBACA,uCACA,uCACA,0CAEA,wBAAQ3G,UAAU,eAAeF,GAAG,eAApC,kBACJ,sBAAKE,UAAU,YAAf,UACI,oBAAI2I,MAAM,SAAV,yBACA,oBAAIA,MAAM,SAAV,SAAmB,qBAAKA,MAAM,SAASC,IAAKC,EAAMC,IAAI,iBAE1D,wBAAQ9I,UAAU,eAAeF,GAAG,wBAApC,4BACA,wBAAQE,UAAU,eAAeF,GAAG,gBAApC,uC,wBCxCbiJ,EAAM,cAAC,IAAD,CAAiB3B,KAAM4B,MAmHpBC,MA9Gf,SAAgB7J,GAAQ,IAAD,IACnB,EAEsC8J,YAAkC9J,EAAM+J,MAF9E,mBACIC,EADJ,KAEIC,EAFJ,KAEoBC,EAFpB,KAE6BpF,EAF7B,KAGA,EAA0B5E,mBAAS,IAAnC,mBAAO2E,EAAP,KAAcsF,EAAd,KACA,EAAgCjK,mBAAS,IAAzC,mBAAOkK,EAAP,KAAiBC,EAAjB,KACA,EAAkCnK,oBAAS,GAA3C,mBAAOoK,EAAP,KAAkBC,EAAlB,KACA,EAA0CrK,oBAAS,GAAnD,mBAAOsK,EAAP,KAAsBC,EAAtB,KACA,EAA8CvK,mBAAS,IAAvD,mBAAOwK,EAAP,KAAwBC,EAAxB,KACA,EAAwDzK,oBAAS,GAAjE,mBAAO0K,EAAP,KAA6BC,EAA7B,KAsCA,OAXI/F,GAASwF,IACTzC,IAAK,CACDC,MAAO,SACPC,KAAMjD,EAAMgG,QACZ9C,KAAM,UACN+C,mBAAmB,EACnB7C,YAAY,IAEhBqC,GAAa,IAGbN,EAGO,iEACAC,EACA,8CASJ,qBAAKtJ,UAAW,WAAhB,SACH,qBAAKA,UAAW,sBAAhB,SACA,uBAAMF,GAAG,wBAAT,UACI,oBAAIA,GAAG,gBAAP,sDACA,uBAAOA,GAAG,sBAAV,yBACA,uBACIE,UAAU,2BACVF,GAAG,gBACH8H,KAAK,WACL3H,KAAK,OACLyG,YAAY,WACZ0D,SAAS,OACTlK,SAAU,SAACW,GAAD,OAAK0I,EAAS1I,EAAEI,OAAOC,UAErC,uBACA,uBAAOpB,GAAG,yBAAV,uBACA,0BACIA,GAAI,mBACJE,UAAU,8BACV0G,YAAY,WACZkB,KAAK,YAJT,4BAKgB,eALhB,qBAMUgC,EAAgB,OAAS,YANnC,yBAOa,QAPb,0BAQc,SAAC/I,GAAD,OAAK4I,EAAY5I,EAAEI,OAAOC,UARxC,IAUA,mBAAGpB,GAAG,cAAc6E,QAjCI,WAC5BkF,GAAiBD,IAgCb,SAAuDb,IACvD,uBAAOjJ,GAAG,yBAAV,+BACA,0BACIA,GAAI,mBACJE,UAAU,8BACV0G,YAAY,WACZkB,KAAK,YAJT,4BAKgB,eALhB,qBAMUoC,EAAuB,OAAS,YAN1C,yBAOa,QAPb,0BAQc,SAACnJ,GAAD,OAAKkJ,EAAmBlJ,EAAEI,OAAOC,UAR/C,IAUA,mBAAGpB,GAAG,cAAc6E,QA1CW,WACnCsF,GAAwBD,IAyCpB,SAA8DjB,IAC9D,uBACA,wBAAQjJ,GAAG,iBAAiBE,UAAU,4BAA4B2E,QA1F1E,WAMkB,KAAVV,IACIuF,IAAaM,EACb7C,IAAK,CACDC,MAAO,0BACPC,KAAM,uCACNC,KAAM,UACN+C,mBAAmB,EACnB7C,YAAY,KAIhBqC,GAAa,GACbP,EAA+BnF,EAAOuF,MAwE1C,qBAGA,wBAAQnJ,MAAM,4BAA4BP,GAAG,iBAAiB6E,QAASvF,EAAMwF,QAA7E,4B,iCCzGNmE,EAAM,cAAC,IAAD,CAAiB3B,KAAM4B,MAqHpBqB,MAhHf,SAAgBjL,GAAQ,IAAD,EACnB,EAA0BE,mBAAS,IAAnC,mBAAO2E,EAAP,KAAcsF,EAAd,KACA,EAAgCjK,mBAAS,IAAzC,mBAAOkK,EAAP,KAAiBC,EAAjB,KACA,EAAkCnK,oBAAS,GAA3C,mBAAOoK,EAAP,KAAkBC,EAAlB,KACA,EAA0CrK,oBAAS,GAAnD,mBAAOsK,EAAP,KAAsBC,EAAtB,KAMA,EAGIS,YAA8BlL,EAAM+J,MAHxC,mBACIoB,EADJ,KAEIlB,EAFJ,KAEoBC,EAFpB,KAE6BpF,EAF7B,KAeA,OAXIA,GAASwF,IACTzC,IAAK,CACDC,MAAO,SACPC,KAAMjD,EAAMgG,QACZ9C,KAAM,UACN+C,mBAAmB,EACnB7C,YAAY,IAEhBqC,GAAa,IAGbN,EAGO,iEACAC,EACA,iDAKJ,sBAAKxJ,GAAG,oBAAR,UACH,uBAAMA,GAAG,2BAAT,UACI,oBAAIA,GAAG,gBAAP,sDACA,uBAAOA,GAAG,sBAAV,yBACA,uBACIE,UAAU,eACVF,GAAG,gBACH8H,KAAK,WACL3H,KAAK,OACLyG,YAAY,WACZ0D,SAAS,OACTlK,SAAU,SAACW,GAAD,OAAK0I,EAAS1I,EAAEI,OAAOC,UAErC,uBACA,uBAAOpB,GAAG,wBAAV,uBACA,0BACIE,UAAU,eACVF,GAAG,mBACH4G,YAAY,WACZkB,KAAK,YAJT,4BAKgB,eALhB,qBAMUgC,EAAgB,OAAS,YANnC,yBAOa,QAPb,0BAQc,SAAC/I,GAAD,OAAK4I,EAAY5I,EAAEI,OAAOC,UARxC,IAUA,mBAAGpB,GAAG,cAAc6E,QA5BI,WAC5BkF,GAAiBD,IA2Bb,SAAuDb,IACvD,uBACA,wBAAQjJ,GAAG,iBAAiBG,KAAK,SAAS0E,QAzDlD,WACIgF,GAAa,GACbY,EAA2BtG,EAAOuF,GAClC7F,QAAQC,IAAIK,EAAOuF,IAsD8CxJ,UAAU,4BAAvE,wBAIJ,sBAAMF,GAAI,mBAAV,SACI,cAAC,IAAD,CAAcA,GAAG,iBAAiB0K,MAAO,CACrCC,WAAY,SACZC,MAAO,SAEG/F,QAAS,kBAAMgG,YAAgBvL,EAAM+J,KAAM/J,EAAMwL,kBAC5CrD,MAAK,SAACsD,GAEH,IAAMC,EAAOD,EAAOC,KAGdC,EAAa3L,EAAMwL,iBAAiBI,qBAAqBH,GACzDI,EAAcF,EAAWE,YAC/BtH,QAAQC,IAAIkH,EAAKC,EAAWE,MAI/BC,OAAM,SAAChH,GAEcA,EAAMvD,KACHuD,EAAMgG,QAEbhG,EAAMD,kBC9EtD5C,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB,IAAMC,EAAKT,IAASU,YACdoJ,EAAgB,QAChBC,EAAiB,QACjBjC,EAAO9H,IAAS8H,OAChBkC,EAAiB,IAAIhK,IAAS8H,KAAKmC,mBACnCV,EAAmB,IAAIW,IA6B7B,SAASC,EAAYpM,GACjB,MAA4BE,mBAAS,YAArC,mBAAOoG,EAAP,KAAe+F,EAAf,KACA,EAAwCnM,mBAAS,IAAjD,mBAAOoM,EAAP,KAAqBC,EAArB,KACA,EAAgCrM,mBAAS,IAAzC,mBAAO2G,EAAP,KAAiB2F,EAAjB,KAEIC,EAAQ,GACRxI,EAAiB,GACfyI,EAAchK,EAAGwB,WAAW6H,GAAeY,MAAM,aAAa,iBAAiB3M,EAAM0L,KAAK7G,OAC5F+H,EAASlK,EAAGwB,WAAW6H,GAG3B,SAASc,IACL9C,EAAK+C,UAGTpK,EAAGwB,WAAW8H,GAAgB7H,IAAInE,EAAM0L,KAAKqB,KAAKC,IAAI,CAACnI,MAAM7E,EAAM0L,KAAK7G,QACxEN,QAAQC,IAAI,uBAES,KAAjB8H,GACAG,EAAQ/J,EAAGwB,WAAW6H,GAAeY,MAAM,aAAa,KAAK3M,EAAM0L,KAAK7G,OACxE+H,EAASlK,EAAGwB,WAAW6H,KAGR,aAAXzF,GACAmG,EAAQ/J,EAAGwB,WAAW6H,GAAe5H,IAAImI,GAAcpI,WAAW,SAClE0I,EAASH,IAETA,EAAQ/J,EAAGwB,WAAW6H,GAAe5H,IAAImI,GAAcpI,WAAW,SAAS+I,QAAQ3G,GACnFsG,EAASlK,EAAGwB,WAAW6H,GAAe5H,IAAImI,GAAcpI,WAAW,UAEvED,EAAiBvB,EAAGwB,WAAW6H,GAAe5H,IAAImI,IAEtD,MAAgCjI,YAAcoI,GAA9C,mBAAO3K,EAAP,KAAcoI,EAAd,KACA,GADA,KACkD7F,YAAcqI,IAAhE,mBAAOQ,EAAP,KACMC,GADN,UACmBzK,EAAGwB,WAAW8H,IACjC,EAA0C3H,YAAc8I,GAAxD,mBAAOC,EAAP,KACA,GADA,UAC2D/I,YAAcJ,IAAzE,mBAAOoJ,EAAP,KAAuBC,EAAvB,KAAyCC,EAAzC,KAEA,GAAIrD,EAEL,OACK,cAAC,EAAD,CAASZ,YAAagD,EAAczF,SAAUA,IAIlD,IAAIqC,EAAoB,MAATpH,EAAeA,EAAM0L,KAAK5I,KAAI,SAACT,GAAD,OAASA,EAAIsJ,UAAU,GAEhEhJ,EAAiB,GACrB,IACwB,IAAhB6H,GAAuBgB,GAAqBC,IAG5C9I,EAAiB4I,EAAeI,QAGxC,MAAO3I,GACHP,QAAQC,IAAI,SAEhB,IAAI4E,EAA4B,MAAf8D,EAAqBA,EAAYM,KAAK5I,KAAI,SAACT,GAAD,OAASA,EAAIsJ,UAAU,GAI9E7G,EAAqB,MAATwG,EAAeA,EAAMI,KAAK5I,KAAI,SAACT,GAAD,OAASA,EAAIsJ,OAAO5I,SAAS,GAE3E,GAAqB,KAAjByH,EACA,OACI,mCACA,cAAC,EAAD,CAAOjF,OAAQwF,EAAc7D,UAAWhJ,EAAM0L,KAAK7G,MAAOqE,SAAUA,EAAUE,WAAYA,EAAYD,YAAa,SAACzI,EAAG8H,GAAQ+D,EAAgB7L,GAAK8L,EAAYhE,IAASb,gBAAiB+F,EAAUzH,eAAgB0H,EAASrF,aAAcO,MAInP,SAAS6E,EAAShN,EAAIgH,EAAO5F,GACJ,KAAjBwK,EACc,SAAV5E,GAA8B,IAAT5F,GAAwB,MAATA,EAGxB8K,EAAOzI,IAAIzD,GACnBkN,OAAJ,eAAalG,EAAQ5F,IAHrB+G,EAAS,CAACnI,IAOA,SAAVgH,GAA8B,IAAT5F,GAAwB,MAATA,GAGxB8K,EAAOzI,IAAIzD,GACnBkN,OAAJ,eAAalG,EAAQ5F,IACrBuK,EAAU/F,IAJVuC,EAAS,CAACnI,IAQtB,SAASiN,EAAQhI,GACbiH,EAAOzI,IAAIwB,EAAQjF,IAAIsM,IAAIrH,GAE/B,SAASkD,EAASR,GACO,KAAjBiE,GACAM,EAAOzI,IAAIkE,EAAU,IAAInE,WAAW,SAAS2J,MAAM1F,MAAK,SAAA2F,GAAa,OACjEA,EAAcN,KAAK5I,KAAI,SAAAmJ,GAAC,OAAInB,EAAOzI,IAAIkE,EAAU,IAAInE,WAAW,SAASC,IAAI4J,EAAErN,IAAIsN,eAEvFpB,EAAOzI,IAAIkE,EAAU,IAAI2F,UAIzB3F,EAAUzD,KAAI,SAAAlE,GAAE,OAAIkM,EAAOzI,IAAIzD,GAAIsN,YAsB7C,OACI,mCACA,cAAC,EAAD,CAAU3G,OAAQwF,EAAc/F,UAXlC,SAAmBjC,EAAOT,GACP1B,EAAGwB,WAAW6H,GAAe5H,IAAIC,GACzCwJ,OAAP,eAAgB,aAAe/I,KASqBA,MAAO7E,EAAM0L,KAAK7G,MAAO+B,UAAWA,EAAWxC,OAAQkI,EAAczF,SAAUA,EAAUF,KAAMuC,EAAUzE,eAAgBA,EAAgBuC,OAAQ,kBAAIuF,EAAgB,KAAK5E,gBAAiB+F,EAAUzH,eAAgB0H,EAASrF,aAAcO,EAAU3B,SArB9S,SAAyB+G,GACC,SAAlBA,IACAA,EAAgB,QAEE,iBAAlBA,IACAA,EAAgB,WAEpB5B,EAAU4B,IAc2ThH,YAAaX,MAM3U4H,MA/Jf,SAAalO,GACT,MAA+BmO,YAAapE,GAA5C,mBAAO2B,EAAP,KAAaxB,EAAb,KACA,GADA,KACoChK,oBAAS,IAA7C,mBAAOkO,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACLD,GAAeD,GAEnB,OAAIlE,EACO,cAAC,EAAD,CAASZ,YAAY,GAAGzC,SAAS,KAEnC6E,GACLnH,QAAQC,IAAI,QAASuF,EAAKgD,KACnB,cAACX,EAAD,aAAaV,KAAMA,GAAU1L,KAIhC,qCACKoO,GAAc,cAAC,EAAD,CAAS5I,QAAS8I,EAAcvE,KAAMA,IACrD,sBAAKrJ,GAAG,oBAAR,UACI,cAAC,EAAD,CAAQqJ,KAAMA,EAAMyB,iBAAkBA,EAAkBS,eAAgBA,IACxE,wBAAQrL,UAAW,eAAgBF,GAAG,kBAAkB6E,QAAS+I,EAAjE,uCC1CLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,EAAD,MAELpL,SAASqL,eAAe,SAG1BX,M","file":"static/js/main.a0043fe6.chunk.js","sourcesContent":["import React, {useState} from 'react';\nfunction Task(props) {\n    const completed = props.completed;\n    const [editContent, setEditContent] = useState(true);\n    const [taskValue, setTaskValue] = useState(props.task)\n\n    function editTimeout() {\n        setEditContent(false);\n        props.onTaskCompleted(props.id, 'task', taskValue);\n        setTimeout(() => {setEditContent(true)},50)\n    }\n    return (\n    <li key ={props.key}>\n        <span className=\"taskItem\">\n        <label>\n            <input aria-label={completed ? \"Click this Checkbox to mark this task as not completed\" : \"Click this Checkbox to mark this task as completed\"} type=\"checkbox\" onChange={() => {props.onTaskCompleted(props.id, 'completed', !completed); props.displayButtons(!completed)}} checked = {false} class={completed ? \"checked\" : \"unchecked\"}/>\n                    <span aria-label=\"Start typing to edit the name of the corresponding task.\" suppressContentEditableWarning={true} contentEditable={editContent} onBlur={() => editTimeout()} onKeyDown={(k)=> k.code === 'Enter' ? editTimeout() : null} class={completed ? \"checked-text\" : \"unchecked-text\"} onInput={(e) =>  setTaskValue(e.currentTarget.textContent)}>{props.task}</span>\n        </label>\n        </span>\n        <select aria-label=\"Set Task Priority\" className=\"taskPriority\" onChange={(e) => props.onTaskCompleted(props.id, 'priority', parseInt(e.target.value))} value={props.priority}>\n            <option aria-label=\"Set Task Priority to 1\">1</option>\n            <option aria-label=\"Set Task Priority to 2\">2</option>\n            <option aria-label=\"Set Task Priority to 3\">3</option>\n        </select>\n    </li>\n    );\n\n}\n\nexport default Task;","import Task from './Task';\nimport swal from 'sweetalert';\nimport React, {useEffect, useState} from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport Select from 'react-select'\nimport useComponentVisible from \"./test\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMsDbORWI7OtcnI4VjQnY6xEE6XGjZPf0\",\n    authDomain: \"to-do-list-78c30.firebaseapp.com\",\n    projectId: \"to-do-list-78c30\",\n    storageBucket: \"to-do-list-78c30.appspot.com\",\n    messagingSenderId: \"466185835646\",\n    appId: \"1:466185835646:web:dbe8a4413a6cad9f3f742f\",\n    measurementId: \"G-3Q5LDPJYK6\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst ourCollection = \"Lists\";\n// const DropdownInput = require(\"react-dropdown-input\");\nfunction ToDoList(props) {\n    const [value, setValue] = useState(null);\n    const [priority, setPriority] = useState(1);\n    const [showCompleted, setShowCompleted] = useState(true);\n    const [showPop, setShowPop] = useState(false)\n    const { ref, isComponentVisible } = useComponentVisible(true);\n    const dict = {'task': 'Name', 'priority': 'Priority', 'created':'Date Created', 'Sort By:':'Sort By:'};\n    const options = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'vanilla', label: 'Vanilla' }\n    ]\n\n    const getSharedQuery = db.collection(ourCollection).doc(props.listId);\n    const [getSharedValue, getSharedLoading, getSharedError] = useCollection(getSharedQuery);\n    // console.log('getSharedValue', getSharedValue.data())\n    function toggleModal() {\n        setShowPop(!showPop)\n    }\n\n    function handleOk(listToShare) {\n        console.log(\"list to share\", listToShare)\n        props.shareWith(listToShare.map(item => item.value), props.listId)\n        toggleModal()\n    }\n\n    console.log(\"listSharedWith\", props.listSharedWith.sharedWith)\n    let sharingList = []\n    try {\n        sharingList = props.listSharedWith.sharedWith.map((email) => {\n            return {\"value\":email, \"label\":email}\n        })\n    }\n    catch (error) {\n\n    }\n    // let listSharedWith = props.listSharedWith.sharedWith.map((email) => {\n    //     return {\"value\":email, \"label\":email}\n    // })\n    console.log(\"listSharedWith\", sharingList)\n    function Alert(props) {\n        const [listToShare, setListToShare] = useState(sharingList)\n        return (\n        <div className={\"backdrop\"}>\n           <div className=\"modal\">\n               <h4>Select the users you want to share with</h4>\n               <Select class=\"modal-content\" id=\"share-dropdown\" defaultValue={listToShare} isMulti blurInputOnSelect={false} options={emailList} onChange={e => setListToShare(e)}/>\n                <div className=\"alert-buttons\">\n                    <button className=\"show-buttons pop-up-buttons\" type={\"button\"}\n                            onClick={props.onClose}>\n                        Cancel\n                    </button>\n\n                    <button onClick={() => props.onDone(listToShare)} className=\"show-buttons pop-up-buttons\" id=\"pop-up-done\">\n                        Done\n                    </button>\n                </div>\n            </div>\n        </div>)\n\n    }\n\n    function enterB() {\n        if (value !== null && value !== \"\") {\n            let newItem = {\n                id: generateUniqueID(),\n                task: value,\n                completed: false,\n                priority: priority,\n                created: firebase.database.ServerValue.TIMESTAMP\n            };\n            props.onNewItemAdded(newItem);\n            setValue(\"\")\n        }\n\n    }\n\n    // console.log(firebase.firestore.FieldValue.serverTimestamp())\n    // // created: firebase.fitrestore.FieldValue.serverTimestamp()\n    // // firebase.firestore.FieldValue.serverTiem\n    let numCompleted = 0\n    function renderList(unSortedList) {\n        let checkedArray = unSortedList.filter(x => x.completed)\n        numCompleted = checkedArray.length\n        let uncheckedArray = unSortedList.filter(x => !x.completed)\n        return [...uncheckedArray, ...checkedArray]\n    }\n\n    function onDelete(){\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover completed tasks!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    let listOfIds = updatedList.filter(a => a.completed === true).map(a => a.id);\n                    props.onDeleteItem(listOfIds);\n                    numCompleted = 0\n\n                } else {\n                    return;\n                }\n            });\n    }\n\n\n\n    let updatedList = renderList(props.list)\n    console.log(\"THis is the updated list\", updatedList)\n    let emailList = props.usersList.map((email) => {\n        return {\"value\":email, \"label\":email}\n    })\n    console.log(\"Email List\", emailList)\n    return (\n        <>\n            <span className='headerClass' id=\"header-one\">\n            <h1 className=\"top-title\">{props.listName}</h1>\n                {showPop &&\n                    <Alert onClose={toggleModal} onDone={handleOk}>\n                    </Alert>\n                }\n            </span>\n            <span className='headerClass' id=\"header-two\">\n                <span id='sort-items'>\n                    <button aria-label=\"Go back to the List of all Lists\" id=\"back-button\" className=\"show-buttons\" onClick={props.goBack}>←</button>\n                        {/*defaultValue='Date Created' value={dict[props.filterValue]}*/}\n                        <select aria-label=\"Click this button to sort list items by a certain criterion\"  id=\"sort-button\" value={dict[props.filterValue]} class={updatedList.length != 0  ? \"show-buttons\" : \"grey-buttons\"} onChange={(e) => {\n                        props.filterBy(e.target.value.toLowerCase())\n                    }}>\n                        <option  disabled>Sort By:</option>\n                        <option aria-label=\"Sort By Creation Date\">Date Created</option>\n                        <option aria-label=\"Sort By Task Priority\">Priority</option>\n                        <option aria-label=\"Sort Lexicographically by Task Name\">Name</option>\n                    </select>\n                    <button id=\"share-button\" className=\"show-buttons\" onClick={toggleModal}>Share List</button>\n                    <button  onClick={props.logOut} className=\"show-buttons log-out-buttons\">Log out</button>\n\n                </span>\n            </span>\n\n\n\n\n\n            <div id=\"container\">\n\n                <div id='enter-item-container' className=\"enter-item\">\n                    <input aria-label=\"Enter the name of your new Task\" type=\"text\" value={value} id=\"input-text\" onKeyDown={(e) => e.code === \"Enter\" ? enterB() : null} onChange={ (e) => setValue(e.target.value)} placeholder=\"Add a task...\"/>\n                    <select aria-label=\"Set Task Priority\" id=\"priority-button\" onChange={(e)=> setPriority(parseInt(e.target.value))} defaultValue='Priority:' class={ value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"}>\n                            <option selected disabled>Priority:</option>\n                            <option aria-label=\"Set Task Priority to 1\">1</option>\n                            <option aria-label=\"Set Task Priority to 2\">2</option>\n                            <option aria-label=\"Set Task Priority to 3\">3</option>\n                    </select>\n                    <button aria-label=\"Click this button to add your task to the list.\" className={value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"} onClick={enterB} id=\"enter-button\">+</button>\n\n                </div>\n\n\n                    {/*<div class=\"modal\">*/}\n                    {/*    <Select class=\"modal-content\" id=\"share-dropdown\" isMulti options={emailList}/>*/}\n                    {/*</div>*/}\n\n\n                <div class=\"ListItems\">\n                    {console.log(props.usersList)}\n\n                    <ul id=\"list\">\n                        {showCompleted ? updatedList.map(a => <Task\n                            onTaskCompleted={ (selectedId, field, value) =>\n                            props.onContentChange(selectedId, field, value) ?  numCompleted--  : null\n                            }\n                            key = {a.id}\n                            displayButtons ={(whetherCompleted)=> {whetherCompleted ? numCompleted++ : numCompleted--}}\n                            {...a}\n                        />) : updatedList.filter(a => a.completed === false).map(a => <Task\n                            onTaskCompleted={ (selectedId, field, value) =>\n                            props.onContentChange(selectedId, field, value) ?  numCompleted-- : null\n                            }\n                            key = {a.id}\n                            displayButtons ={(whetherCompleted)=> whetherCompleted ? numCompleted++ : numCompleted--}\n                            {...a}\n                        />)}\n                    </ul>\n                </div>\n                <button aria-label={showCompleted ? \"Click this button to hide completed tasks\" : \"Click this button to show completed tasks\"} class={numCompleted > 0 ? \"show-buttons\" : \"grey-buttons\"} id=\"hide-completed-button\" onClick={() => setShowCompleted(!showCompleted)}>{showCompleted ? \"Hide Completed\" : \"Show Completed\"}</button>\n                <button aria-label=\"Click this button to Delete Completed Tasks\" class={numCompleted > 0 && showCompleted ? \"show-buttons\" : \"grey-buttons\"} id=\"delete-button\" onClick={onDelete}>Delete Completed</button>\n            </div>\n        </>\n);\n}\n\n\nexport default ToDoList;\n\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible) {\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","import React, {useState} from 'react';\nfunction List(props) {\n    const [editContent, setEditContent] = useState(true);\n    const [listValue, setListValue] = useState(props.name)\n\n    function editTimeout() {\n        setEditContent(false);\n        props.onListChange(props.id, 'name', listValue);\n        setTimeout(() => {setEditContent(true)},50)\n    }\n    return (\n        <li className=\"listItem\" key={props.id}>\n        <span className=\"taskItem\">\n            <label aria-label=\"Start typing to edit the name of the corresponding List.\" suppressContentEditableWarning={true} contentEditable={editContent} onBlur={()=>editTimeout()} onKeyDown={(k)=> k.code === 'Enter' ? editTimeout() : null} onInput={(e) => setListValue(e.currentTarget.textContent)}>{props.name}</label>\n        </span>\n            <button aria-label=\"Click this button to see the corresponding List.\" className=\"show-buttons\" id=\"go-button\" onClick={() => props.onGo(props.id, props.name)}>Go</button>\n            <button aria-label=\"Click this button to delete the corresponding List.\" className=\"show-buttons\" id=\"delete-list-button\" onClick={() =>props.onDelete(props.id)}>🗑</button>\n        </li>\n    );\n}\n\nexport default List;\n","\nimport App from './App';\nimport './App.css';\nimport ToDoList from \"./To-DoList\";\nimport List from './List';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport React, {useState} from 'react';\nimport swal from 'sweetalert';\n\n\n\nfunction Lists(props) {\n\n    const [value, setValue] = useState('');\n\n    function enterB() {\n        if (value !== null && value !== \"\") {\n            let newItem = {\n                id: generateUniqueID(),\n                name: value,\n                ownerEmail: props.userEmail,\n                sharedWith: []\n            };\n            props.onNewItemAdded(newItem);\n            setValue(\"\")\n        }\n    }\n\n\n    function onDelete(id){\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this List!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    props.onDeleteItem([id]);\n                } else {\n                    return;\n                }\n            });\n    }\n\n\n    function deleteAllLists() {\n        swal({\n            title: \"Delete All Lists?\",\n            text: \"Once deleted, you will not be able to recover these Lists!\",\n            icon: \"warning\",\n            buttons: [\"No\", \"Yes\"],\n            dangerMode: true,\n        })\n            .then((okToDelete) => {\n                if (okToDelete) {\n                    props.taskList.map(list => props.onDeleteItem([list.id]));\n                } else {\n                    return;\n                }\n            });\n\n    }\n\n    return (\n        <>\n            <div id=\"list-title-container\">\n            <label id=\"list-title\" className=\"top-title\">Lists</label>\n            <button id=\"list-log-out\" className=\"show-buttons log-out-buttons\" onClick={props.logOut}>Log out</button>\n            </div>\n            <div id=\"list-container\">\n                <div className=\"enter-item\" id=\"list-enter-item\">\n                    <input aria-label=\"Enter the name of your new List\" type=\"text\" maxLength=\"28\" id=\"list-input-text\" value={value} onKeyDown={(e) => e.code === \"Enter\" ? enterB() : null} onChange={ (e) => setValue(e.target.value)} placeholder=\"Create a list...\"/>\n                    <button aria-label=\"Click this button to add your new List to the List of Lists.\" className={value !== \"\" && value !== null ? \"show-buttons\" : \"grey-buttons\"}  onClick={enterB} id=\"list-enter-button\">+</button>\n                    <button aria-label=\"Click this button to delete all the Lists that you have.\" className={props.taskList.length > 0 ? \"show-buttons\" : \"grey-buttons\"} id=\"delete-all-lists\" onClick={deleteAllLists}>🗑</button>\n\n\n                </div>\n                <div class=\"ListItems\" id=\"List-of-list-items\">\n                    {\n                        props.taskList.length > 0 ?\n                        <>\n                        <h3>Your Lists</h3>\n                        <ul id=\"list\">{\n                        props.taskList.map(a => <List onGo={props.displayList} onListChange={props.onContentChange} onDelete={onDelete}{...a}/>)\n                    }\n                        </ul>\n                        </>\n                        :\n                        null\n\n                    }\n                    {\n                        props.sharedList.length > 0 ?\n                            <>\n                                <h3>Shared Lists</h3>\n                                <ul id=\"list\">{\n                                    props.sharedList.map(a => <List onGo={props.displayList} onListChange={props.onContentChange} onDelete={onDelete}{...a}/>)\n                                }\n                                </ul>\n                            </>\n                            :\n                            null\n\n                    }\n               </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default Lists;\n\n\n\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/loading.a1a99674.gif\";","import React from 'react';\nimport logo from './loading.gif'\n\n\n\nfunction Loading(props) {\n    if (props.loadingType === '') {\n\n    return (\n        <>\n        <div id=\"root\"><h1 className=\"top-title\">Lists</h1>\n            <div id=\"list-container\">\n                <div className=\"enter-item\" id=\"list-enter-item\"><input type=\"text\" maxLength=\"28\" id=\"list-input-text\" placeholder=\"Create a list...\" value=\"\"/>\n                    <button className=\"grey-buttons\" id=\"list-enter-button\">+</button>\n                    <button className=\"grey-buttons\" id=\"delete-all-lists\">🗑</button>\n                </div>\n                <div className=\"ListItems\" id=\"List-of-list-items\">\n                    <h2 align=\"center\">Loading....</h2>\n                    <h3 align=\"center\"><img align=\"center\" src={logo} alt=\"Loading\"/></h3>\n                </div>\n            </div>\n        </div>\n        </>\n        )\n        }\n    else {\n       return <>\n           <div id=\"root\"><span className=\"headerClass\" id=\"header-one\"><h1 className=\"top-title\">{props.listName}</h1></span><span\n               className=\"headerClass\" id=\"header-two\"><span id=\"sort-items\"><button id=\"back-button\"\n                                                                                     className=\"show-buttons\">←</button><select\n               id=\"sort-button\" className=\"grey-buttons\"><option disabled=\"\" selected=\"\">Sort By:</option><option>Priority</option><option>Name</option><option>Date Created</option></select></span></span>\n               <div id=\"container\">\n                   <div id=\"enter-item-container\" className=\"enter-item\"><input type=\"text\" id=\"input-text\"\n                                                                                placeholder=\"Add a task...\"\n                                                                                value=\"\"/><select id=\"priority-button\"\n                                                                                                 className=\"grey-buttons\">\n                       <option disabled=\"\" selected=\"\">Priority:</option>\n                       <option>1</option>\n                       <option>2</option>\n                       <option>3</option>\n                   </select>\n                       <button className=\"grey-buttons\" id=\"enter-button\">+</button></div>\n                   <div className=\"ListItems\">\n                       <h2 align=\"center\">Loading....</h2>\n                       <h3 align=\"center\"><img align=\"center\" src={logo} alt=\"Loading\"/></h3>\n                   </div>\n                   <button className=\"grey-buttons\" id=\"hide-completed-button\">Hide Completed</button>\n                   <button className=\"grey-buttons\" id=\"delete-button\">Delete Completed</button>\n               </div>\n           </div>\n       </>\n    }\n    }\n\nexport default Loading;\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from 'sweetalert';\nimport {useCreateUserWithEmailAndPassword} from 'react-firebase-hooks/auth';\n\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\n\n\nfunction SignUp(props) {\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error] = useCreateUserWithEmailAndPassword(props.auth);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [showError, setShowError] = useState(false);\n    const [passwordShown, setPasswordShown] = useState(false);\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\n\n    function onSubmit() {\n\n        // else {\n        //     console.log(\"entered the else\")\n\n\n        if (email !== \"\" ) {\n            if (password !== confirmPassword) {\n                swal({\n                    title: \"Passwords do not match!\",\n                    text: \"Make sure that your Passwords Match!\",\n                    icon: \"warning\",\n                    showConfirmButton: true,\n                    dangerMode: true,\n                })\n            }\n            else {\n                setShowError(true)\n                createUserWithEmailAndPassword(email, password);\n            }\n\n        }\n    }\n\n\n    if (error && showError) {\n        swal({\n            title: \"Error!\",\n            text: error.message,\n            icon: \"warning\",\n            showConfirmButton: true,\n            dangerMode: true,\n        })\n        setShowError(false);\n    }\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing Up...</p>\n    }\n    const togglePasswordVisiblity = () => {\n        setPasswordShown(passwordShown ? false : true);\n    }\n    const toggleConfirmPasswordVisiblity = () => {\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\n    }\n\n    return <div className={\"backdrop\"}>\n        <div className={\"modal modal-sign-in\"}>\n        <form id=\"sign-up-pop-container\">\n            <h4 id=\"sign-in-title\">Sign up with a valid email and password!</h4>\n            <label id=\"sign-in-email-label\">User Email:</label>\n            <input\n                className=\"input-email log-in-input\"\n                id=\"sign-in-email\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Email...\"\n                required=\"true\"\n                onChange={(e)=>setEmail(e.target.value)}\n            />\n            <br/>\n            <label id=\"sign-in-password-label\">Password:</label>\n            <input\n                id={\"sign-in-password\"}\n                className=\"input-password log-in-input\"\n                placeholder=\"Password\"\n                name=\"password\"\n                placeholder=\"Password...\"\n                type={passwordShown ? \"text\" : \"password\"}\n                required=\"true\"\n                onChange={(e)=>setPassword(e.target.value)}\n            />\n            <i id=\"sign-in-eye\" onClick={togglePasswordVisiblity}>{eye}</i>\n            <label id=\"confirm-password-label\">Confirm Password:</label>\n            <input\n                id={\"confirm-password\"}\n                className=\"input-password log-in-input\"\n                placeholder=\"Password\"\n                name=\"password\"\n                placeholder=\"Password...\"\n                type={confirmPasswordShown ? \"text\" : \"password\"}\n                required=\"true\"\n                onChange={(e)=>setConfirmPassword(e.target.value)}\n            />\n            <i id=\"confirm-eye\" onClick={toggleConfirmPasswordVisiblity}>{eye}</i>\n            <br/>\n            <button id=\"sign-up-button\" className=\"sign-buttons show-buttons\" onClick={onSubmit}>\n                Sign Up\n            </button>\n            <button class=\"show-buttons sign-buttons\" id=\"sign-up-cancel\" onClick={props.onClose}>cancel</button>\n        </form>\n        </div>\n    </div>\n}\n\nexport default SignUp;","import {useSignInWithEmailAndPassword} from 'react-firebase-hooks/auth';\nimport React, {useState} from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport swal from 'sweetalert';\nimport GoogleButton from 'react-google-button'\nimport FacebookLogin from 'react-facebook-login';\nimport { getAuth, signInWithPopup } from \"firebase/auth\";\n\n\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\n\n\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [showError, setShowError] = useState(false);\n    const [passwordShown, setPasswordShown] = useState(false);\n    function onSubmit() {\n        setShowError(true);\n        signInWithEmailAndPassword(email, password);\n        console.log(email, password);\n    };\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(props.auth);\n    if (error && showError) {\n        swal({\n            title: \"Error!\",\n            text: error.message,\n            icon: \"warning\",\n            showConfirmButton: true,\n            dangerMode: true,\n        })\n        setShowError(false);\n    }\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n    const togglePasswordVisiblity = () => {\n        setPasswordShown(passwordShown ? false : true);\n    };\n    return <div id=\"sign-in-container\">\n        <form id=\"manual-sign-in-container\">\n            <h4 id=\"sign-in-title\">Enter your Email and Password to log in!</h4>\n            <label id=\"sign-in-email-label\">User Email:</label>\n            <input\n                className=\"log-in-input\"\n                id=\"sign-in-email\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Email...\"\n                required=\"true\"\n                onChange={(e)=>setEmail(e.target.value)}\n            />\n            <br/>\n            <label id=\"sign-in-pasword-label\">Password:</label>\n            <input\n                className=\"log-in-input\"\n                id=\"sign-in-password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                placeholder=\"Password...\"\n                type={passwordShown ? \"text\" : \"password\"}\n                required=\"true\"\n                onChange={(e)=>setPassword(e.target.value)}\n            />\n            <i id=\"sign-in-eye\" onClick={togglePasswordVisiblity}>{eye}</i>\n            <br/>\n            <button id=\"sign-in-button\" type=\"submit\" onClick={onSubmit} className=\"sign-buttons show-buttons\">\n                Sign In\n            </button>\n        </form>\n        <span id={\"google-container\"}>\n            <GoogleButton id=\"google-sign-in\" style={{\n                background: \"revert\",\n                color: \"black\"\n            }}\n                          onClick={() => signInWithPopup(props.auth, props.facebookProvider)\n                              .then((result) => {\n                                  // The signed-in user info.\n                                  const user = result.user;\n\n                                  // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n                                  const credential = props.facebookProvider.credentialFromResult(result);\n                                  const accessToken = credential.accessToken;\n                                  console.log(user,credential,accessToken);\n\n                                  // ...\n                              })\n                              .catch((error) => {\n                                  // Handle Errors here.\n                                  const errorCode = error.code;\n                                  const errorMessage = error.message;\n                                  // The email of the user's account used.\n                                  const email = error.email;\n                                  // The AuthCredential type that was used.\n                                  // ...\n                              })}\n            />\n\n                          {/* onClick={() => props.auth.signInWithPopup(props.googleProvider)}*/}\n              {/*<FacebookLogin*/}\n              {/*    appId=\"191553899857512\"*/}\n              {/*    autoLoad={false}*/}\n              {/*    scope=\"email\"*/}\n              {/*    fields=\"email\"*/}\n              {/*    onClick={() => props.auth.signInWithPopup(props.facebookProvider)}*/}\n              {/*     />*/}\n\n        </span>\n\n        {/*<button onClick={() =>*/}\n        {/*    auth.signInWithPopup(googleProvider)}>Login with Google*/}\n        {/*</button>*/}\n    </div>\n}\n\n\nexport default SignIn;","import './App.css';\nimport ToDoList from \"./To-DoList\";\nimport React, {useState} from 'react';\n\nimport firebase from \"firebase/compat\";\nimport swal from 'sweetalert';\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport Lists from \"./Lists\";\nimport Loading from \"./loading\";\nimport SignUp from \"./SignUp\"\nimport SignIn from \"./SignIn\"\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport { FacebookAuthProvider } from \"firebase/auth\";\n\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMsDbORWI7OtcnI4VjQnY6xEE6XGjZPf0\",\n  authDomain: \"to-do-list-78c30.firebaseapp.com\",\n  projectId: \"to-do-list-78c30\",\n  storageBucket: \"to-do-list-78c30.appspot.com\",\n  messagingSenderId: \"466185835646\",\n  appId: \"1:466185835646:web:dbe8a4413a6cad9f3f742f\",\n  measurementId: \"G-3Q5LDPJYK6\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst ourCollection = \"Lists\";\nconst userCollection = \"Users\";\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookProvider = new FacebookAuthProvider();\n\nfunction App(props) {\n    const [user, loading, error] = useAuthState(auth)\n    const [showSignUp, setShowSignUp] = useState(false)\n\n    function toggleSignUp() {\n        setShowSignUp(!showSignUp)\n    }\n    if (loading) {\n        return <Loading loadingType=\"\" listName=\"\"></Loading>\n    }\n    else if (user) {\n        console.log(\"Hello\", auth.uid)\n        return <SignedInApp user={user} {...props}></SignedInApp>\n    }\n    else {\n        return (\n            <>\n                {showSignUp && <SignUp  onClose={toggleSignUp} auth={auth}></SignUp>}\n                <div id=\"sign-up-container\">\n                    <SignIn auth={auth} facebookProvider={facebookProvider} googleProvider={googleProvider}></SignIn>\n                    <button className={\"show-buttons\"} id=\"click-to-signup\" onClick={toggleSignUp}>New Here? Sign Up!</button>\n                </div>\n            </>\n        )\n    }\n}\n\nfunction SignedInApp(props) {\n    const [filter, setFilter] = useState('Sort By:');\n    const [selectedList, setSelectedList] = useState('');\n    const [listName, setListName] = useState('');\n    // const [listSharedWith, setListSharedWith] = useState(null);\n    let query = ''\n    let getSharedQuery = '';\n    const sharedQuery = db.collection(ourCollection).where('sharedWith','array-contains',props.user.email);\n    let docRef = db.collection(ourCollection)\n\n\n    function handleLogOut() {\n        auth.signOut()\n    }\n    // Add User to our List of Users\n    db.collection(userCollection).doc(props.user.uid).set({email:props.user.email});\n    console.log(\"Successfully Added!\");\n\n    if (selectedList === '') {\n        query = db.collection(ourCollection).where('ownerEmail','==',props.user.email);\n        docRef = db.collection(ourCollection)\n    }\n    else {\n        if (filter === 'Sort By:') {\n            query = db.collection(ourCollection).doc(selectedList).collection('Tasks');\n            docRef = query\n        } else {\n            query = db.collection(ourCollection).doc(selectedList).collection('Tasks').orderBy(filter);\n            docRef = db.collection(ourCollection).doc(selectedList).collection('Tasks')\n        }\n        getSharedQuery = db.collection(ourCollection).doc(selectedList);\n    }\n    const [value, loading, error] = useCollection(query);\n    const [sharedValue, sharedLoading, sharedError] = useCollection(sharedQuery);\n    const usersQuery = db.collection(userCollection);\n    const [users, usersLoading, usersError] = useCollection(usersQuery);\n    const [getSharedValue, getSharedLoading, getSharedError] = useCollection(getSharedQuery);\n\n    if (loading) {\n\n   return (\n        <Loading loadingType={selectedList} listName={listName}></Loading>\n        );}\n\n\n    let taskList = value != null? value.docs.map((doc) => doc.data()) : []\n\n    let listSharedWith = []\n    try {\n        if (selectedList != \"\" && !getSharedLoading && !getSharedError) {\n            // setListSharedWith(getSharedValue.data())\n            // console.log(\"getSharedValue\", getSharedValue.data());\n            listSharedWith = getSharedValue.data();\n        }\n    }\n    catch (error) {\n        console.log(\"error\")\n    }\n    let sharedList = sharedValue != null? sharedValue.docs.map((doc) => doc.data()) : []\n    // if (sharedList != [] && selectedList == '') {\n    //     taskList = [...taskList, ...sharedList]\n    // }\n    let usersList = users != null? users.docs.map((doc) => doc.data().email) : []\n\n    if (selectedList === '') {\n        return (\n            <>\n            <Lists logOut={handleLogOut} userEmail={props.user.email} taskList={taskList} sharedList={sharedList} displayList={(id,name)=>{setSelectedList(id); setListName(name);}} onContentChange={setField} onNewItemAdded={addItem} onDeleteItem={onDelete}/>\n            </>\n        )\n    }\n    function setField(id, field, value) {\n        if (selectedList === '') {\n            if (field === 'name' && (value == \"\" || value == null)) {\n                onDelete([id]);\n            } else {\n                const doc = docRef.doc(id);\n                doc.update({[field]: value});\n            }\n        }\n        else {\n            if (field === 'task' && (value == \"\" || value == null)) {\n                onDelete([id]);\n            } else {\n                const doc = docRef.doc(id);\n                doc.update({[field]: value});\n                setFilter(filter)\n            }\n        }\n    }\n    function addItem(newItem) {\n        docRef.doc(newItem.id).set(newItem);\n    }\n    function onDelete(listOfIds) {\n        if (selectedList === \"\") {\n            docRef.doc(listOfIds[0]).collection(\"Tasks\").get().then(querySnapshot =>\n                querySnapshot.docs.map(d => docRef.doc(listOfIds[0]).collection('Tasks').doc(d.id).delete())\n            );\n            docRef.doc(listOfIds[0]).delete();\n\n        }\n        else {\n            listOfIds.map(id => docRef.doc(id).delete());\n        }\n    }\n    function getFilteredList(currentFilter) {\n        if (currentFilter === \"name\") {\n            currentFilter = \"task\"\n        }\n        if (currentFilter === \"date created\") {\n            currentFilter = \"created\"\n        }\n        setFilter(currentFilter)\n        }\n\n    function shareWith(email, listId) {\n        const docRef = db.collection(ourCollection).doc(listId);\n        docRef.update({['sharedWith']: email});\n        // docRef.set(email)\n    //     docRef.update({\n    //         sharedWith: firebase.firestore.FieldValue.arrayUnion.apply(this, email)\n    // });\n    }\n\n  return (\n      <>\n      <ToDoList logOut={handleLogOut} shareWith={shareWith} email={props.user.email} usersList={usersList} listId={selectedList} listName={listName} list={taskList} listSharedWith={listSharedWith} goBack={()=>setSelectedList('')} onContentChange={setField} onNewItemAdded={addItem} onDeleteItem={onDelete} filterBy={getFilteredList} filterValue={filter}/>\n\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Lists from './Lists'\n\nReactDOM.render(\n  <React.StrictMode>\n       <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}